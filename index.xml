<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kkBill&#39;s Blog</title>
    <link>https://kkbill.github.io/</link>
    <description>Recent content on kkBill&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 06 Jan 2021 10:49:09 +0800</lastBuildDate><atom:link href="https://kkbill.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>关于</title>
      <link>https://kkbill.github.io/about/</link>
      <pubDate>Tue, 17 Nov 2020 21:38:52 +0800</pubDate>
      
      <guid>https://kkbill.github.io/about/</guid>
      <description>我是kkBill 本科毕业于浙江师范大学，研究生毕业于浙江大学 对Kubernetes/Docker/Go/边缘计算有了解</description>
    </item>
    
    <item>
      <title>KubeEdge DeviceTwin模块详解</title>
      <link>https://kkbill.github.io/post/kubeedge-devicetwin/</link>
      <pubDate>Wed, 06 Jan 2021 10:49:09 +0800</pubDate>
      
      <guid>https://kkbill.github.io/post/kubeedge-devicetwin/</guid>
      <description>1. 概述 首先，明确DeviceTwin模块在KubeEdge架构中所处的位置，如下图所示： 其中，黄色部分是KubEedge设备管理链路相关的组</description>
    </item>
    
    <item>
      <title>KubeEdge DeviceController模块详解</title>
      <link>https://kkbill.github.io/post/kubeedge-devicecontroller/</link>
      <pubDate>Wed, 06 Jan 2021 10:44:51 +0800</pubDate>
      
      <guid>https://kkbill.github.io/post/kubeedge-devicecontroller/</guid>
      <description>1. 概述 DeviceController属于KubeEdge的云端组件，负责设备管理。KubeEdge利用Kubernetes提供的CRD机制</description>
    </item>
    
    <item>
      <title>字符编码</title>
      <link>https://kkbill.github.io/post/unicode-and-character/</link>
      <pubDate>Thu, 03 Dec 2020 16:39:54 +0800</pubDate>
      
      <guid>https://kkbill.github.io/post/unicode-and-character/</guid>
      <description>注：本文主要转自阮一峰老师的字符编码笔记：ASCII，Unicode 和 UTF-8 1.ASCII 码 我们知道，计算机内部，所有信息最终都是一个二进制值。每一个二进制</description>
    </item>
    
    <item>
      <title>Strings, bytes, runes and characters in Go</title>
      <link>https://kkbill.github.io/post/go-string/</link>
      <pubDate>Wed, 02 Dec 2020 22:38:54 +0800</pubDate>
      
      <guid>https://kkbill.github.io/post/go-string/</guid>
      <description>1.string概念 Go标准库builtin给出了所有内置类型的定义，源代码位于src/builtin/builtin.go，其中关于str</description>
    </item>
    
    <item>
      <title>Heap</title>
      <link>https://kkbill.github.io/post/heap/</link>
      <pubDate>Thu, 26 Nov 2020 20:26:51 +0800</pubDate>
      
      <guid>https://kkbill.github.io/post/heap/</guid>
      <description>0. 堆的定义 以下引自《算法导论》： 堆（Heap）是一个可以被看成近似完全二叉树的数组。树上的每一个结点对应数组的一个元素。除了最底层外，该树是</description>
    </item>
    
    <item>
      <title>K8s实践笔记</title>
      <link>https://kkbill.github.io/post/k8s-operation-note/</link>
      <pubDate>Tue, 24 Nov 2020 13:23:59 +0800</pubDate>
      
      <guid>https://kkbill.github.io/post/k8s-operation-note/</guid>
      <description>本文记录了k8s实践中遇到的操作层面的一些坑 无法删除namespace 在操作过程中遇到这样的报错，unable to create new content in namespace nodedeployment-system because it is being term</description>
    </item>
    
    <item>
      <title>Go Container(list, heap, ring)</title>
      <link>https://kkbill.github.io/post/go-container/</link>
      <pubDate>Sun, 22 Nov 2020 12:25:40 +0800</pubDate>
      
      <guid>https://kkbill.github.io/post/go-container/</guid>
      <description>1. 前言 2. heap(堆) 3. list(双向链表) 4. ring(循环链表) 5. 总结 1. 前言 C++的STL标准库中定义了常见的数据结构，比如stack、v</description>
    </item>
    
    <item>
      <title>Slice insert/remove</title>
      <link>https://kkbill.github.io/post/go-slice-insert/</link>
      <pubDate>Sat, 21 Nov 2020 21:39:38 +0800</pubDate>
      
      <guid>https://kkbill.github.io/post/go-slice-insert/</guid>
      <description>插入 删除 Go语言的切片（Slice）并不提供insert/delete API，但是在使用中，经常会出现在任意位置插入/删除一个元素的情况。 插</description>
    </item>
    
  </channel>
</rss>
